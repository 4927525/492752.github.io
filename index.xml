<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Website of 4927525</title><link>https://example.com/</link><description>Recent content on Website of 4927525</description><generator>Hugo -- gohugo.io</generator><language>en</language><lastBuildDate>Mon, 13 Dec 2021 17:12:42 +0800</lastBuildDate><atom:link href="https://example.com/index.xml" rel="self" type="application/rss+xml"/><item><title>Docker学习笔记</title><link>https://example.com/post/docker/docker%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/</link><pubDate>Mon, 13 Dec 2021 17:12:42 +0800</pubDate><guid>https://example.com/post/docker/docker%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/</guid><description>Docker安装 使用官方安装脚本自动安装 安装命令如下：
curl -fsSL https://get.docker.com | bash -s docker --mirror aliyun 也可以使用国内 daocloud 一键安装命令：</description></item><item><title>docker从零部署项目包括不间断线上更新</title><link>https://example.com/post/docker/docker%E4%BB%8E%E9%9B%B6%E9%83%A8%E7%BD%B2%E9%A1%B9%E7%9B%AE%E5%8C%85%E6%8B%AC%E4%B8%8D%E9%97%B4%E6%96%AD%E7%BA%BF%E4%B8%8A%E6%9B%B4%E6%96%B0/</link><pubDate>Mon, 13 Dec 2021 14:15:56 +0800</pubDate><guid>https://example.com/post/docker/docker%E4%BB%8E%E9%9B%B6%E9%83%A8%E7%BD%B2%E9%A1%B9%E7%9B%AE%E5%8C%85%E6%8B%AC%E4%B8%8D%E9%97%B4%E6%96%AD%E7%BA%BF%E4%B8%8A%E6%9B%B4%E6%96%B0/</guid><description>序 记录自己用Docker从零搭建项目部署到服务器和使用红黑部署来保证程序不中断更新的心得和经验。
对Docker还不熟悉的小伙伴可以看下这篇文章
1. 编写项目微服务 这是前提工作，必须确保项目是可以运行的。
2. 创建网络 这是容器通信的基础</description></item><item><title>About</title><link>https://example.com/about/</link><pubDate>Mon, 13 Dec 2021 13:51:40 +0800</pubDate><guid>https://example.com/about/</guid><description>关于我 这里是 kevin 的 blog，AKA 4927525.
未来方向：go后端开发
type PersonalInformation struct { Name string Age int64 Address string Email string Description string } type Skills struct { Skill []string } func Me() (PersonalInformation, Skills) { information := PersonalInformation{ Name: &amp;#34;Kevin&amp;#34;, Age: 25, Address: &amp;#34;BeiJing&amp;#34;, Email: &amp;#34;hzbskak@gmail.</description></item></channel></rss>